# docker compose -f docker-compose_basic.yml --env-file ./compose.env up -d
# docker compose -f docker-compose_basic.yml --env-file ./compose.env up -d mongoDB  # just one container
version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:management
    restart: always
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
       smartbots_networks:
         ipv4_address: 172.20.0.2
    ports:
    - ${RABBITMQ_PORT}:5672
    - 15672:15672

  mongodb:
    image: mongo:5.0
    restart: always
    hostname: mongodb
    networks:
      smartbots_networks:
        ipv4_address: 172.20.0.3
    ports:
      - 27017:27017
    volumes:
      - ./mongo-data:/data/db

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000

  jupyterlab:
    build:
      context: .
      dockerfile: smartbot-python.dockerfile
    ports:
      - 4444:8888
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      AM_I_IN_A_DOCKER_CONTAINER: 1
    volumes:
      - ..:/app
    networks:
      smartbots_networks:
        ipv4_address: 172.20.0.4
    entrypoint: sh -c 'jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --notebook-dir=/app --allow-root'

  event_keeper:
    build:
      context: .
      dockerfile: smartbot-python.dockerfile
    hostname: event_keeper
    volumes:
      - ..:/app
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      AM_I_IN_A_DOCKER_CONTAINER: 1
    networks:
      smartbots_networks:
        ipv4_address: 172.20.0.5
    command: python -u ./bots/event_keeper.py

networks:
  smartbots_networks:
    ipam:
      config:
        - subnet: 172.20.0.0/24